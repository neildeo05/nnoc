/* Generated by Yosys 0.37+74 (git sha1 f5420d720, clang 14.0.0-1ubuntu1.1 -fPIC -Os) */

(* hdlname = "\\Core" *)
(* dynports =  1  *)
(* top =  1  *)
(* src = "./Core.v:1.1-53.10" *)
module Core(clk, reset, load, weights, activation, result, result_buffer);
  (* src = "./Core.v:15.34-15.44" *)
  input [255:0] activation;
  wire [255:0] activation;
  (* src = "./Core.v:12.13-12.16" *)
  input clk;
  wire clk;
  (* src = "./Core.v:14.13-14.17" *)
  input load;
  wire load;
  (* src = "./Core.v:13.13-13.18" *)
  input reset;
  wire reset;
  (* src = "./Core.v:17.39-17.45" *)
  output [127:0] result;
  wire [127:0] result;
  (* src = "./Core.v:18.40-18.53" *)
  output [511:0] result_buffer;
  wire [511:0] result_buffer;
  (* src = "./Core.v:19.21-19.29" *)
  wire [15:0] row1_val;
  (* src = "./Core.v:20.21-20.29" *)
  wire [15:0] row2_val;
  (* src = "./Core.v:21.21-21.29" *)
  wire [15:0] row3_val;
  (* src = "./Core.v:22.21-22.29" *)
  wire [15:0] row4_val;
  (* src = "./Core.v:16.34-16.41" *)
  input [255:0] weights;
  wire [255:0] weights;
  (* module_not_derived = 32'd1 *)
  (* src = "./Core.v:36.4-46.3" *)
  Array #(
    .ACCUMULATE(32'sd32),
    .WIDTH(32'sd16)
  ) arr (
    .clk(clk),
    .load(load),
    .reset(reset),
    .result_buffer(result),
    .row1_val(row1_val),
    .row2_val(row2_val),
    .row3_val(row3_val),
    .row4_val(row4_val),
    .weights(weights)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./Core.v:47.42-52.3" *)
  ResultBuffer #(
    .ACCUMULATE(32'sd32)
  ) rb (
    .clk(clk),
    .res_buffer(result_buffer),
    .reset(reset),
    .result_port(result)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "./Core.v:23.31-32.3" *)
  ShiftBuffer #(
    .WIDTH(32'sd16)
  ) shb (
    .activation(activation),
    .clk(clk),
    .load(load),
    .reset(reset),
    .row1_val(row1_val),
    .row2_val(row2_val),
    .row3_val(row3_val),
    .row4_val(row4_val)
  );
endmodule
