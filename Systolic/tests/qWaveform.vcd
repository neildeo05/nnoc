$version Generated by VerilatedVcd $end
$date Thu Feb  8 21:01:32 2024
 $end
$timescale   1ps $end

 $scope module TOP $end
  $var wire 32 7 inputFP [31:0] $end
  $var wire  8 9 outputInt8 [7:0] $end
  $var wire 32 6 result [31:0] $end
  $var wire 32 8 scale_inv [31:0] $end
  $var wire 32 : scaledFp32 [31:0] $end
  $var wire 32 4 var1 [31:0] $end
  $var wire 32 5 var2 [31:0] $end
  $scope module fdiv $end
   $var wire  8 ; exp1 [7:0] $end
   $var wire  8 < exp2 [7:0] $end
   $var wire  8 ( expC [7:0] $end
   $var wire 32 # i [31:0] $end
   $var wire 32 4 in1 [31:0] $end
   $var wire 32 5 in2 [31:0] $end
   $var wire 24 % mantissa1 [23:0] $end
   $var wire 24 > mantissa2 [23:0] $end
   $var wire 24 & mantissaProd [23:0] $end
   $var wire 24 ' mantissaRema [23:0] $end
   $var wire  1 = nAn $end
   $var wire 32 6 result [31:0] $end
   $var wire  1 ) signF $end
   $var wire 24 $ t [23:0] $end
   $var wire 32 4 var1 [31:0] $end
   $var wire 32 5 var2 [31:0] $end
  $upscope $end
  $scope module quantization $end
   $var wire 10 - cvrtInt [9:0] $end
   $var wire 32 7 inputFP [31:0] $end
   $var wire  8 + j [7:0] $end
   $var wire 23 . manScale [22:0] $end
   $var wire  8 9 outputInt8 [7:0] $end
   $var wire 32 8 scale_inv [31:0] $end
   $var wire 32 * scaledFp [31:0] $end
   $var wire 32 : scaledFp32 [31:0] $end
   $var wire  8 , temp [7:0] $end
   $scope module fp0 $end
    $var wire  8 / expF [7:0] $end
    $var wire 32 3 i [31:0] $end
    $var wire 23 0 mantissa [22:0] $end
    $var wire 24 @ mantissa1 [23:0] $end
    $var wire 24 A mantissa2 [23:0] $end
    $var wire 48 1 mantissaProd [47:0] $end
    $var wire 32 7 num1 [31:0] $end
    $var wire 32 8 num2 [31:0] $end
    $var wire 32 * out_mul [31:0] $end
    $var wire  1 ? sign $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
b00000000000000000000000000011000 #
b000000000000000000000000 $
b000000000000000000000000 %
b000000000000000000000000 &
b000000000000000000000000 '
b01100110 (
0)
b01000000001111000100110001011001 *
b00001001 +
b00000001 ,
b0000000010 -
b11110001001100010110010 .
b10000000 /
b01111000100110001011001 0
b101111000100110001011001011100001111110011111000 1
b00000000000000000000000000011000 3
b00000000000000000000000000000000 4
b00000000000000000000000000000000 5
b01111111110000000000000000000000 6
b01000000000110010001011010000111 7
b00111111100111010111000010100100 8
b00000010 9
b01000000001111000100110001011001 :
b00000000 ;
b00000000 <
1=
b100000000000000000000000 >
0?
b100110010001011010000111 @
b100111010111000010100100 A
#1
#2
#3
#4
#5
#6
#7
#8
#9
#10
#11
#12
#13
#14
#15
#16
#17
#18
#19
