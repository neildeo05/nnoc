$version Generated by VerilatedVcd $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire  1 % act_load $end
  $var wire  1 # clk $end
  $var wire  4 & num_input_tiles [3:0] $end
  $var wire 16 ' output_activation[0] [15:0] $end
  $var wire 16 1 output_activation[10] [15:0] $end
  $var wire 16 2 output_activation[11] [15:0] $end
  $var wire 16 3 output_activation[12] [15:0] $end
  $var wire 16 4 output_activation[13] [15:0] $end
  $var wire 16 5 output_activation[14] [15:0] $end
  $var wire 16 6 output_activation[15] [15:0] $end
  $var wire 16 ( output_activation[1] [15:0] $end
  $var wire 16 ) output_activation[2] [15:0] $end
  $var wire 16 * output_activation[3] [15:0] $end
  $var wire 16 + output_activation[4] [15:0] $end
  $var wire 16 , output_activation[5] [15:0] $end
  $var wire 16 - output_activation[6] [15:0] $end
  $var wire 16 . output_activation[7] [15:0] $end
  $var wire 16 / output_activation[8] [15:0] $end
  $var wire 16 0 output_activation[9] [15:0] $end
  $var wire  1 7 ready $end
  $var wire  1 $ reset $end
  $scope module TileAccumulator $end
   $var wire 32 9 ACCUMULATE [31:0] $end
   $var wire 32 : MAX_INPUT_TILES [31:0] $end
   $var wire 32 8 WIDTH [31:0] $end
   $var wire  1 % act_load $end
   $var wire  1 # clk $end
   $var wire  4 & num_input_tiles [3:0] $end
   $var wire 16 ' output_activation[0] [15:0] $end
   $var wire 16 1 output_activation[10] [15:0] $end
   $var wire 16 2 output_activation[11] [15:0] $end
   $var wire 16 3 output_activation[12] [15:0] $end
   $var wire 16 4 output_activation[13] [15:0] $end
   $var wire 16 5 output_activation[14] [15:0] $end
   $var wire 16 6 output_activation[15] [15:0] $end
   $var wire 16 ( output_activation[1] [15:0] $end
   $var wire 16 ) output_activation[2] [15:0] $end
   $var wire 16 * output_activation[3] [15:0] $end
   $var wire 16 + output_activation[4] [15:0] $end
   $var wire 16 , output_activation[5] [15:0] $end
   $var wire 16 - output_activation[6] [15:0] $end
   $var wire 16 . output_activation[7] [15:0] $end
   $var wire 16 / output_activation[8] [15:0] $end
   $var wire 16 0 output_activation[9] [15:0] $end
   $var wire  1 7 ready $end
   $var wire  1 $ reset $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
1%
b0000 &
b0000000000000000 '
b0000000000000000 (
b0000000000000000 )
b0000000000000000 *
b0000000000000000 +
b0000000000000000 ,
b0000000000000000 -
b0000000000000000 .
b0000000000000000 /
b0000000000000000 0
b0000000000000000 1
b0000000000000000 2
b0000000000000000 3
b0000000000000000 4
b0000000000000000 5
b0000000000000000 6
07
b00000000000000000000000000010000 8
b00000000000000000000000000100000 9
b00000000000000000000000000000100 :
#1
1#
#2
0#
0%
#3
1#
#4
0#
#5
1#
#6
0#
#7
1#
#8
0#
#9
1#
#10
0#
#11
1#
#12
0#
#13
1#
#14
0#
#15
1#
#16
0#
#17
1#
#18
0#
#19
1#
#20
0#
#21
1#
#22
0#
#23
1#
#24
0#
